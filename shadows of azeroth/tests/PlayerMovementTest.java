package tests;

import entities.Player;
import maps.Map;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class PlayerMovementTest {
    private Player player;
    private Map map;

    @BeforeEach
    public void setUp() {
        player = new Player(0, 0); // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (0, 0)
        map = new Map(); // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ OGRE_LANDS
    }

    @Test
    public void testPlayerCanMoveOnEmptyCell() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –Ω–∞ —Å–≤–æ–±–æ–¥–Ω—É—é —è—á–µ–π–∫—É
        boolean result = player.playerMove(1, 0, map); // –î–≤–∏–∂–µ–Ω–∏–µ –≤–Ω–∏–∑ (x=1, y=0)
        assertTrue(result);
        assertEquals(1, player.getX());
        assertEquals(0, player.getY());
    }



    @Test
    public void testPlayerCannotMoveOutOfBounds() {
        // –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç—ã (OGRE_MAP_SIZE = 8)
        boolean result = player.playerMove(-1, 0, map); // x=-1 ‚Äî –≤–Ω–µ –∫–∞—Ä—Ç—ã
        assertFalse(result);
        assertEquals(0, player.getX()); // –ù–µ –≤—ã—à–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
    }

    @Test
    public void testPlayerCanMoveOnRoad() {
        // –£—Å—Ç–∞–Ω–æ–≤–∏–º –¥–æ—Ä–æ–≥—É –Ω–∞ (1, 0)
        map.ogreMap[1][0].setCelltype("üõ£Ô∏è"); // –î–æ—Ä–æ–≥–∞

        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–π—Ç–∏ –Ω–∞ –¥–æ—Ä–æ–≥—É
        boolean result = player.playerMove(1, 0, map);
        assertTrue(result);
        assertEquals(1, player.getX());
        assertEquals(0, player.getY());
    }
}